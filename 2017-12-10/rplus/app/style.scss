@function gg($n: 0) {
  @return $n * 5px;
}

@mixin fill($dir: 'full', $type: absolute) {
  position: $type;
  @if $dir != 'bottom' {top: 0; }
  @if $dir != 'right' {left: 0; }
  @if $dir != 'left' {right: 0; }
  @if $dir != 'top' {bottom: 0; }
}

@keyframes reset-transform {
  to { transform: none; }
}

@keyframes fade-in {
  from { opacity: 0; }
  to   { opacity: 1; }
}

.logo {
  --theme-color: #000;
  --theme-background-color: #fff;

  display: flex;
  align-items: center;
  overflow: hidden;
  color: var(--theme-color);
  background-color: var(--theme-background-color);
  perspective: 200px;
  transform-style: preserve-3d;

  &:active * {
    &,
    &::before,
    &::after {
      animation: none !important;
    }
  }
}

.char {
  height: gg(32);
  transform: translateZ(-30px);
  opacity: 0;
  animation:
    reset-transform ease-out forwards 2s 1s,
    fade-in linear forwards 2s 1s;

  &.C {
    position: relative;
    width: gg(32);
    border-radius: 50%;
    box-shadow: inset 0 0 0 gg(9);

    &::after {
      content: '';
      @include fill;
      width: gg(56);
      height: gg(56);
      margin-top: auto;
      margin-bottom: auto;
      margin-left: gg(20);
      background-color: var(--theme-background-color);
      border-radius: inherit;
    }
  }

  &.O {
    position: relative;
    z-index: 1;
    width: gg(18);
    height: gg(18);
    margin-left: gg(7);
    margin-right: gg(14);
    transform: unset;
    animation: none;
    opacity: 1;

    &::before {
      content: '';
      @include fill;
      margin: gg(18 - 56) / 2;
      border-radius: 50%;
      background-color: var(--theme-background-color);
      animation: reset-transform cubic-bezier(0.1, 0.7, 0, 1) forwards 1s 1.5s;
      transform: scale(3);
    }

    &::after {
      content: '';
      @include fill;
      border-radius: 50%;
      box-shadow: inset 0 0 0 gg(6);
      transform: scale((24/18));
      opacity: 0;
      animation:
        reset-transform linear forwards 3s,
        fade-in linear forwards 1s;
    }
  }

  &.R {
    position: relative;
    width: gg(25);
    margin-right: gg(9);
    box-shadow: inset gg(8) 0 0;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: gg(25);
      height: gg(24);
      border-radius: 0 50% 50% 0;
      box-shadow: inset 0 0 0 gg(7);
    }

    &::after {
      content: '';
      position: absolute;
      right: gg(-3.5);
      bottom: 0;
      width: gg(9.5);
      height: gg(12);
      transform: skewX(30deg);
      transform-origin: 100% 100%;
      background-color: currentColor;
    }
  }

  &.E {
    width: gg(19);
    border-top: gg(7) solid;
    border-left: gg(9) solid;
    border-bottom: gg(7) solid;
    background: linear-gradient(currentColor, currentColor) no-repeat 0% gg(5);
    background-size: gg(9) gg(7);
  }
}

.box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

/// reset
*,
*::before,
*::after {
  margin: 0;
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  line-height: 1.4;
}

.intro {
  width: 90%;
  max-width: 50rem;
  padding-top: .5em;
  padding-bottom: 1rem;
  margin: 0 auto 1em;
  font-size: calc(1rem + 2vmin);
  text-transform: capitalize;
  text-align: center;
  font-family: serif;

  small {
    display: block;
    text-align: right;
    opacity: .3;
    font-style: italic;
    text-transform: none;
    margin-top: .5rem;
    border-top: 1px dashed;
  }
}

.info {
  margin: auto 0 0;
  padding: 1em;
  font-size: .9em;
  font-style: italic;
  font-family: serif;
  text-align: right;
  opacity: .75;

  a {
    color: inherit;
  }
}
